Built-in Functions
    We already know: print(),input(), len()
    Comes with standard library, full of modules. 
    Modules are python programs that contains a related group of functions that can be used in your programs
    Ex. Math module has math related functions, random module has random number related functions, etc.
    import statements
        You can't use them unless you import them with an import statement.
        Type import, and then the thing you want to import.
        You can import multiple functions at once by seperating them with a comma in the  import statements
        After  doing this, you must type the module + . + function to use the function. Ex. random.randint
        There is another type of import statement:  from (module) impoort *
            ex. from random import *
            This makes it  so you wouldn't need to type the module at the start of the function.
            It is better to use  the other option, because typing the module at the start makes it more  clear.
    Third party modules
        Python comes with it's standard library, but you can also add on more modules.
        You can install them using the pip program. HOW DO YOU DO THIS HELP

Functions
    random
        randint #give  it a range and it gives you a random number in that range.
    sys 
        exit # If you want to stop the program before it reaches the bottom of instructions
    pyperclip HOW DO YOU GET THIS?!?!?!
        copy #copies text to clipboard
        paste #returns what is copied on clipboard
    
Creating your own functions:
    Create function by writing def, then your function name, and put what you want your function to do in a block underneath that.
    This is good so instead of writing the code multiple times, you can just call to your function multiple times.
    You can add a variable into your function, ex. def hi(name)
    The name variable here is called a parameter. When the function is called the name parameter is assigned the argument that is is passed.  (see create function practice if confused)
    REMEMBER: arument = the value passed in the function call, / parameter = the variable inside the function
    When creating a function using the def statement, you can specify what return values should be with a return statement
    Return statement can be put in the block of your new function you are creating, and it returns whatever is after it. 
    You don't need a return statement in all your functions, and if it doesn't the return value defaults to the none value.
    
Keyword arguments
    Some functions have keyword arguments. These are often used for optional arguments to pass to a function call.
    Print function automatically adds a new line character to the end of a string that's passed.
    But you can get rid of this, by adding a comma, the keyword end, which is equal to ''
    When you pass multiple string values to print, it automatically puts a space between them.
    But if you pass the sep, it will allow you to change what the seperating character is. you could put sep='abc' to make the seperating character abc
    Most of the time you don't need these keyword arguments.

None value
    Since all function calls return values, what does the print function return? Print doesn't return the string, it just displays the string as a side effect. 
    It actually returns a special value called None.
    None is a data type that represents the lack of a value.
    

